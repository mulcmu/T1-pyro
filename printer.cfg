#T1Pro

[include shell_command.cfg]

[include mainsail.cfg]

[include timelapse.cfg]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu host]
serial: /tmp/klipper_host_mcu

[mcu LoadCell]
serial:  /dev/ttyS0
restart_method: command

[endstop_phase]

[load_cell_probe]
sensor_type: hx717
sclk_pin: LoadCell:PB9
dout_pin: LoadCell:PB8
sensor_orientation: inverted
counts_per_gram = 68.54675
reference_tare_counts = 1465556
force_safety_limit: 1000
trigger_force: 75
z_offset: 0.0 #the distance between nozzle and level switch
speed: 2.0
samples: 5 
samples_result: average
sample_retract_dist: 1
samples_tolerance: 0.01
samples_tolerance_retries: 5

#drift_filter_cutoff_frequency: 0.8
#   Enable optional continuous taring while homing & probing to reject drift.
#   The value is a frequency, in Hz, below which drift will be ignored. This
#   option requires the SciPy library. Default: None
# buzz_filter_cutoff_frequency: 100.0
#   The value is a frequency, in Hz, above which high frequency noise in the
#   load cell will be igfiltered outnored. This option requires the SciPy
#   library. Default: None
notch_filter_frequencies: 60
#   1 or 2 frequencies, in Hz, to filter out of the load cell data. This is
#   intended to reject power line noise. This option requires the SciPy
#   library. Default: None
notch_filter_quality: 6.0
#   Controls how narrow the range of frequencies are that the notch filter
#   removes. Larger numbers produce a narrower filter. Minimum value is 0.5 and
#   maximum is 3.0. Default: 2.0
#tare_samples:
#   The number of samples to use when automatically taring the load_cell before
#   each probe. The default value is: sample_per_second * (1 / 60) * 4. This
#   collects samples from 4 cycles of 60Hz mains power to cancel power line
#   noise.
# pullback_distance: 0.2
#   The length of the pullback move. The default is 0.2mm and is a safe
#   starting point for most beds. This can be decreased if the motion system
# is very ridgid
#pullback_speed:
#   The speed of the pullback move. The default value is 1.0 micron per sensor
#   sample. Increasing this value will speed up the move and reduce accuracy.
#tap_buzz_filter_cutoff_frequency: 70
#   Filter out high frequency noise in the probe force data before doing Tap
#   Analysis. Frequencies above this number will be filtered with a
#   Butterworth filter. This option requires the SciPy library. Default: None
#tap_buzz_filter_order: 4
#   This is the order of the Butterworth filter. Higher order numbers
#   increase the complexity of the filter and the sharpness of the cutoff.
#   Default: 4.
# notch_filter_frequencies: 50, 60
#   Filter out specific frequencies of noise in the probe force data before
#   doing Tap Analysis. Up to 6 frequencies may be specified. This
#   option requires the SciPy library. Default: None.
# notch_filter_quality: 2.0
#   Controls how narrow the range of frequencies are that the tap notch filter
#   removes. Larger numbers produce a narrower filter. Minimum value is 0.5 and
#   maximum is 3.0. Default: 2.0
#bad_tap_retries: 1
#   Number of attempts that the probe shoudld make before failing. One retry
#   will cause the probe to be cleaned once and make a second probe attempt.
#   Default: 1

[simple_tap_classifier]
#min_decompression_force_percentage: 66.6
#   Checks that the decompression force is at least 2/3's of the measured
#   compression force. A low decompression force usually indicates plastic oozed
#   out during the dwell time before the pullback move.
#max_baseline_force_change_percentage: 50
#   Checks that the force before and after the tap do not differ by more than
#   50% of the measured compression force. A large difference may indicate the
#   presence of molten plastic under the nozzle or an unstable bed surface.
#compression_start_angle_range: 70, 110
#compression_end_angle_range: 70, 110
#decompression_start_angle_range: 95, 135
#decompression_end_angle_range: 95, 135
#   Checks that the angle measured at each point on the tap graph falls inside
#   the configured range. The range must be 2 values in min, max order and
#   between 0 and 180 degrees.
#   The default for all of these is None.

# [tap_recorder]
# load_cell_probe: load_cell_probe
# #   Specify the name of the load cell probe to listen to.


[printer]
kinematics: delta
max_velocity: 1000 #max print speed ,default is 400mm/s
max_accel: 30000 
square_corner_velocity: 5 
max_z_velocity: 1000
print_radius: 133 #max printable radius
minimum_z_position:-1.05
delta_radius = 171.822312

[stepper_a]
step_pin: PE5
dir_pin: !PD7  
enable_pin: !PE1
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD4
homing_speed: 40
homing_retract_dist: 2.5
second_homing_speed: 2.5
angle = 210.068157
arm_length = 333.541020
position_endstop = 330.546

[stepper_b]
step_pin: PB9
dir_pin: !PC7  
enable_pin: !PD3
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD14
angle = 329.998346
arm_length = 335.415210
position_endstop = 331.930

[stepper_c]
step_pin: PB8
dir_pin: !PE15  
enable_pin: !PD13
microsteps: 32
rotation_distance: 60 
endstop_pin: ^PE10
angle = 90.268900
arm_length = 336.463818
position_endstop = 331.505

[tmc5160 stepper_a]
cs_pin: PB4
spi_software_sclk_pin:PE0
spi_software_miso_pin:PB3
spi_software_mosi_pin:PD5
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_b]
cs_pin: PC6
spi_software_sclk_pin:PD0
spi_software_miso_pin:PA8
spi_software_mosi_pin:PD1
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_c]
cs_pin: PD9
spi_software_sclk_pin:PD10
spi_software_miso_pin:PD8
spi_software_mosi_pin:PD11
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[extruder]
step_pin: PD15
dir_pin: !PB0
enable_pin: !PB1
microsteps: 16
rotation_distance: 4.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA5
sensor_type: Generic 3950
#sensor_type: hotend_hack
pullup_resistor: 510
sensor_pin: PA4
min_temp: -200 # extruder min temp
max_temp: 320 # extruder max temp
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.025 
#pressure_advance: 0.041
control = pid
pid_kp = 18.049
pid_ki = 0.970
pid_kd = 83.929

[tmc5160 extruder]
cs_pin:PC4
spi_software_sclk_pin:PA7
spi_software_mosi_pin:PA6
spi_software_miso_pin:PC5
sense_resistor: 0.0375
run_current: 1.2
hold_current: 0.3 # motor hold current

[fan]
pin: !PE6
cycle_time: 0.0001
max_power: 0.6
kick_start_time: 0.0

#Implement the hotend fan with hysteresis to avoid rapid on/off cycling
[display_template HEATSINK_FAN]
text:
    {% set temp = printer['extruder'].temperature %}
    {% set speed = printer['fan_generic heat_sink_fan'].speed %}
    {% set set_temp = printer['extruder'].target %}

    {% if temp < 35 and set_temp == 0 %}
        { "0.0" }
    {% elif temp >= 50 or set_temp > 50 %}
        { "1.0" }
    {% else %}
        { speed | round(1) }
    {% endif %}

[fan_generic heat_sink_fan] 
pin: PE8
shutdown_speed: 1.0

#Set heat sink fan to use above template with hysteresis implemented
[delayed_gcode _START_HEATSINK_FAN]
initial_duration: 1.
gcode:
  SET_FAN_SPEED FAN=heat_sink_fan TEMPLATE=HEATSINK_FAN

[heater_bed]
heater_pin: PA2
sensor_pin: PA1
sensor_type: Generic 3950
min_temp: -5
max_temp: 130 #hotbed max temp
control = pid
pid_kp = 76.182
pid_ki = 1.582
pid_kd = 917.041

[temperature_sensor Armv7 mcu] #the temp of pad
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp] #the temp of mcu
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[input_shaper]
#shaper_freq_x: 34.78   # frequency for the X mark of the test model
#shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[filament_switch_sensor effector_switch]
runout_gcode: 
event_delay: 3.0
debounce_delay: 2.0
switch_pin: !PE7

[filament_switch_sensor btt_switch]
pause_on_runout: True
runout_gcode: 
event_delay: 1.0
debounce_delay: 0.5
switch_pin: ^PA13

[filament_motion_sensor btt_motion]
switch_pin: ^PA14
detection_length: 5
extruder: extruder
pause_on_runout: False
runout_gcode:
  M117 Filament encoder runout  
  PAUSE # [pause_resume] is required in printer.cfg

insert_gcode:
  M117 Filament encoder inserted


[delta_calibrate]
radius: 123.5
horizontal_move_z: 5 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 100

# Probe config  for stock probe setup
# [probe]
# pin: !PA3
# x_offset: 0 
# y_offset: 0 
# z_offset: -0.24 #the distance between nozzle and level switch
# speed: 10
# samples: 4 
# samples_result: average
# sample_retract_dist: 5
# samples_tolerance: 0.15 # precision
# samples_tolerance_retries: 5 

[bed_mesh]
speed: 50
horizontal_move_z: 10 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 100
mesh_origin: 0,0
round_probe_count: 7 
algorithm: bicubic
fade_start: 0.2
fade_end: 5
fade_target: 0

[output_pin relay_pin]
pin: PD6
pwm: False
value: 0

[gcode_macro relay_on]
gcode:
    SET_PIN PIN=relay_pin VALUE=1

[gcode_macro relay_off]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    SET_PIN PIN=relay_pin VALUE=0

[output_pin caselight]
pin: host:pwmchip0/pwm0
pwm: True
hardware_pwm: True
cycle_time: 0.000001


# [output_pin beeper]
# pin: host:pwmchip0/pwm1
# pwm: True
# hardware_pwm: True
# value: 0
# shutdown_value: 0
# cycle_time: 0.0005


# [output_pin BOXFAN_pin]
# pin: PE2
# pwm: False
# value: 0
# [gcode_macro boxfan_on]
# gcode:
#     SET_PIN PIN=BOXFAN_pin VALUE=1

# [gcode_macro boxfan_off]
# gcode:
#     SET_PIN PIN=BOXFAN_pin VALUE=0

[gcode_macro MEASURING_RESONANCES] 
description: Measuring Resonances
gcode: 
     M117 MEASURING RESONANCES START !
     G28
     SAVE_VARIABLE VARIABLE=resonances_state VALUE=True
     SHAPER_CALIBRATE
     G28
     SAVE_CONFIG


[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}
    M117 unload_filament heating completed!
    G91
    M220 S100   # set speed_factor to normal
    M221 S100   # set extrude_factor to normal
    G1 E-100 F200
    M400
    M220 S{speed_factor*100} # recover speed_factor
    M221 S{extrude_factor*100} # recover extrude_factor
    G90
    M117 unload_filament done!

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}

    M117 load_filament heating completed!
    G91
    M220 S100    # set speed_factor to normal
    M221 S100    # set extrude_factor to normal
    G1 E70 F800
    G1 E30 F300
    M400
    M220 S{speed_factor*100}  # recover speed_factor
    M221 S{extrude_factor*100}  # recover extrude_factor
    G90
    M117 load_filament done!

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro TMC]
gcode:
    DUMP_TMC STEPPER=stepper_a
    DUMP_TMC STEPPER=stepper_b
    DUMP_TMC STEPPER=stepper_c
    DUMP_TMC STEPPER=extruder

[idle_timeout]
# gcode:
#     A list of G-Code commands to execute on an idle timeout. See
#     docs/Command_Templates.md for G-Code format. The default is to run
#     "TURN_OFF_HEATERS" and "M84".
timeout: 600
#     Idle time (in seconds) to wait before running the above G-Code
#     commands. The default is 600 seconds.

[pause_resume]

[exclude_object]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "printing" %}
        {% set x = params.X|default(0) %}      #edit to your park position
        {% set y = params.Y|default(-110) %}      #edit to your park position
        {% set z = params.Z|default(10)|float %} #edit to your park position
        {% set e = params.E|default(1) %}        #edit to your retract length

        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}

        ### If the current position is greater than max_z-60, xy is set to 0###
        ### Normally, the max_z-limit_z is around 46mm,now expand 50mm###
        {% if act_z >= max_z - 60 %}
            {% set x = 0 %}
            {% set y = 0 %}
        {% endif %}

        {% if act_z < (max_z - lift_z) %}
            {% set z_safe = act_z + lift_z %}
        {% else %}
            {% set z_safe = max_z %}
        {% endif %}

        {% set fan_speed = printer.fan.speed|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
            G1 E-{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
            G90
            G1 X{x} Y{y} z{z_safe} F6000
            M117 Pause and move to X={ x } Y={ y } Z={ z_safe }
        {% else %}
            {action_respond_info("Printer not homed")}
        {% endif %}
        {% set nozzle_temp = printer.extruder.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
        M104 S90
        {% set bed_temp = printer.heater_bed.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp VALUE={bed_temp}
        M106 S204
        M400
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_bed_temp: 0
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "paused" %}
        M140 S{bed_temp}
        M109 S{nozzle_temp}
        {% set e = params.E|default(1) %} #edit to your retract length
        #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
        ##### end of definitions #####
        G91
        {% if nozzle_temp >= 180 %}
            G1 E{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        G90
        M400
        RESUME_BASE {get_params}
        {% set fan_speed = fan_speed * 255 %}
        M106 S{fan_speed}
    {% endif %}

# [force_move]
# enable_force_move: True

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2
##############################################################################################
##############################################################################################
[gcode_macro START_PRINT]
gcode:
    relay_on
    BED_MESH_PROFILE LOAD=default
    SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
    CLEAR_PAUSE
    M106 S255

[gcode_macro END_PRINT]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    M106 S255

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M106 S0
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    G28
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    M106 S255

[virtual_sdcard]
path: ~/printer_data/gcodes

[gcode_arcs]

[display_status]

[homing_override]
gcode:
  G28
  G91
  G0 Z-5 F3000
  G90
  G0 X0 Y0 F3000

[resonance_tester]
probe_points:0, 0, 20
accel_chip: adxl345
# min_freq: 30
# max_freq: 50
# accel_per_hz: 250

[adxl345]
cs_pin:PE11
spi_software_sclk_pin:PE14
spi_software_mosi_pin:PE13
spi_software_miso_pin:PE12
rate:1600

# ###########################################################################################################################
# # M106
# ###########################################################################################################################
# [gcode_macro M106]
# description: fan speed control
# rename_existing: M106.1
# gcode:
#     {% set last_fan_speed = printer.fan.speed|float %}
#     {% set max_power = printer.fan.max_power|float %}
#     {% set last_fan_value = last_fan_speed/max_power %}
#     {% set fan_speed = params.S|default(255)|int %}
#     {% if last_fan_value < 0.1 and fan_speed > 100 %}
#         M106.1 S60
#         SET_GCODE_VARIABLE MACRO=set_fan VARIABLE=fan_speed VALUE={fan_speed}
#         UPDATE_DELAYED_GCODE ID=setfan DURATION=2
#     {% else %}
#         M106.1 S{fan_speed}
#     {% endif %}
# [gcode_macro set_fan]
# variable_fan_speed: 0
# gcode:
#     M106.1 S{fan_speed}
# [delayed_gcode setfan]
# initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
# gcode:
#     set_fan
#     UPDATE_DELAYED_GCODE ID=setfan DURATION=0


# EXP1 / EXP2 (display) pins
#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PC1, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
#    EXP1_2=PC3, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
#    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
#    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

############################################################################################################################
############################################################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 80.0
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 84.2
#*#
#*# [bed_mesh heated_85]
#*# version = 1
#*# points =
#*# 	-0.047741, -0.047741, -0.047741, -0.047741, -0.047741, -0.047741, -0.047741
#*# 	-0.009413, -0.009413, -0.017458, -0.029384, -0.011711, 0.054756, 0.054756
#*# 	-0.046371, -0.046371, 0.009352, 0.018413, 0.048928, 0.081405, 0.081405
#*# 	0.057181, 0.056713, 0.012896, 0.023045, 0.019005, -0.018228, 0.032792
#*# 	-0.006330, -0.006330, 0.021366, 0.001803, 0.047664, 0.060251, 0.060251
#*# 	0.015814, 0.015814, 0.009581, 0.030701, 0.008307, 0.052900, 0.052900
#*# 	0.018938, 0.018938, 0.018938, 0.018938, 0.018938, 0.018938, 0.018938
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -99.99
#*# max_x = 99.99
#*# min_y = -99.99
#*# max_y = 99.99
#*#
#*# [bed_mesh default_cold]
#*# version = 1
#*# points =
#*# 	-0.024526, -0.024526, -0.024526, -0.024526, -0.024526, -0.024526, -0.024526
#*# 	0.018866, 0.018866, -0.009271, -0.023354, -0.020628, 0.026854, 0.026854
#*# 	-0.032757, -0.032757, -0.034862, -0.019371, 0.050350, 0.050106, 0.050106
#*# 	0.039165, 0.031380, -0.016110, -0.006068, -0.009868, -0.034972, -0.004222
#*# 	-0.039123, -0.039123, -0.049121, -0.026650, -0.013541, 0.025321, 0.025321
#*# 	-0.032366, -0.032366, -0.047558, -0.037271, -0.037952, 0.004676, 0.004676
#*# 	-0.036947, -0.036947, -0.036947, -0.036947, -0.036947, -0.036947, -0.036947
#*# min_x = -99.99
#*# max_x = 99.99
#*# min_y = -99.99
#*# max_y = 99.99
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.067058, -0.067058, -0.067058, -0.067058, -0.067058, -0.067058, -0.067058
#*# 	-0.028582, -0.028582, -0.054547, -0.035850, -0.020951, 0.006535, 0.006535
#*# 	-0.064648, -0.064648, -0.045949, -0.036517, 0.003851, 0.019434, 0.019434
#*# 	-0.012783, 0.012276, -0.041908, -0.034723, -0.026509, -0.049779, -0.038560
#*# 	-0.054720, -0.054720, -0.059075, -0.073643, -0.034201, -0.031975, -0.031975
#*# 	-0.095359, -0.095359, -0.098374, -0.085952, -0.083141, -0.051705, -0.051705
#*# 	-0.097628, -0.097628, -0.097628, -0.097628, -0.097628, -0.097628, -0.097628
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -99.99
#*# max_x = 99.99
#*# min_y = -99.99
#*# max_y = 99.99
#*#
#*# [endstop_phase stepper_a]
#*# trigger_phase = 10/128
#*#
#*# [endstop_phase stepper_b]
#*# trigger_phase = 70/128
#*#
#*# [endstop_phase stepper_c]
#*# trigger_phase = 59/128
